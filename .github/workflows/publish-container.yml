name: Publish Container Images

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

# Set explicit permissions - only grant what's needed
permissions:
  contents: read     # Needed to check out the repository
  packages: write    # Needed to push to GitHub Container Registry

jobs:
  build-publish:
    name: Build and Publish Containers
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64'
      
      - name: Create certificate file for build
        env:
          CA_BUNDLE: ${{ secrets.CA_BUNDLE }}
          CA_BUNDLE_PART1: ${{ secrets.CA_BUNDLE_PART1 }}
          CA_BUNDLE_PART2: ${{ secrets.CA_BUNDLE_PART2 }}
          CA_BUNDLE_PART3: ${{ secrets.CA_BUNDLE_PART3 }}
          CA_BUNDLE_PART4: ${{ secrets.CA_BUNDLE_PART4 }}
          CA_BUNDLE_PART5: ${{ secrets.CA_BUNDLE_PART5 }}
          CA_BUNDLE_PART6: ${{ secrets.CA_BUNDLE_PART6 }}
          CA_BUNDLE_PART7: ${{ secrets.CA_BUNDLE_PART7 }}
          CA_BUNDLE_PART8: ${{ secrets.CA_BUNDLE_PART8 }}
          CA_BUNDLE_PART9: ${{ secrets.CA_BUNDLE_PART9 }}
        run: |
          ./scripts/assemble-certificates.sh --verify
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long
      
      # Build and push minimal for amd64+arm64
      - name: Build and push minimal container
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.optimized
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository }}:minimal
            ghcr.io/${{ github.repository }}:slim
            ${{ steps.meta.outputs.tags }}-slim
          labels: |
            ${{ steps.meta.outputs.labels }}
            org.opencontainers.image.description=ComplianceAsCode builder (minimal version)
            org.opencontainers.image.vendor=MITRE
            org.opencontainers.image.licenses=Apache-2.0
            org.opencontainers.image.documentation=https://github.com/mitre/cac-builder#readme
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      # Build full container only for amd64 for now
      - name: Build and push full container
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository }}:full
            ghcr.io/${{ github.repository }}:latest
            ${{ steps.meta.outputs.tags }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            org.opencontainers.image.description=ComplianceAsCode builder (full version)
            org.opencontainers.image.vendor=MITRE
            org.opencontainers.image.licenses=Apache-2.0
            org.opencontainers.image.documentation=https://github.com/mitre/cac-builder#readme
          build-args: |
            BUILD_TYPE=full
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      # Create versioned tags for releases
      - name: Create versioned tags for releases
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${{ github.ref_name }}
          
          # Tag minimal with version
          docker buildx imagetools create \
            --tag ghcr.io/${{ github.repository }}:${VERSION}-slim \
            ghcr.io/${{ github.repository }}:slim
          
          # Tag full with version
          docker buildx imagetools create \
            --tag ghcr.io/${{ github.repository }}:${VERSION} \
            ghcr.io/${{ github.repository }}:latest
          
          # Add -full suffix tag for those who prefer explicit naming
          docker buildx imagetools create \
            --tag ghcr.io/${{ github.repository }}:${VERSION}-full \
            ghcr.io/${{ github.repository }}:latest
          
      # Make packages public
      - name: Make packages public
        run: |
          # Get package name base
          REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          
          # For each tag, make packages public
          for TAG in minimal slim full latest; do
            echo "Setting $REPO:$TAG to public..."
            gh api --method PATCH \
              /user/packages/container/$REPO/visibility \
              -f visibility="public" \
              -H "Accept: application/vnd.github+json" || true
          done
          
          echo "Package visibility updated to public"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
